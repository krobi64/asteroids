
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <link rel="icon" type="image/png" href="images/MPClogo16.png">

<title>MPC: Asteroid Data Explorer - Control Panel </title>

<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<!-- Latest compiled and minified CSS -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">

<!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap-theme.min.css">

<!-- Latest compiled and minified JavaScript -->
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

<script src="http://cdnjs.cloudflare.com/ajax/libs/d3/3.4.13/d3.min.js"></script>

<script src="http://cdnjs.cloudflare.com/ajax/libs/crossfilter/1.3.11/crossfilter.min.js"></script>


<!-- font awesome -->
<link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">

<!-- our css -->
<link rel="stylesheet" href="/ae/includes/asteroids.css">


<script type="text/javascript">
$(document).ready(function(){
    $('[data-toggle="popover"]').popover({
    trigger: 'hover',
        'placement': 'top'
    });
    $('#radio-tom-modal').on('hidden.bs.modal', function (e) {
         $('#question-tom').val('');
     });
    $('.torino').popover({
    html : true,
    content: function() {
      return $('#torino_content_wrapper').html();
    }
    });
});
</script>

</head>

<body>


<h1>Finding Asteroids Before They Find Us!</h1>

<div class="mission">
  <h2>Mission</h2>
  <p>Your mission is to <strong>discover, learn and share</strong> information about asteroids to increase awareness about asteroids and their impact to the world. <!-- Asteroids, sometimes called minor planets, are rocky remnants left over from the early formation of our solar system about 4.6 billion years ago. Despite their size, asteroids can be dangerous. Many have hit Earth in the past, and more will crash into our planet in the future. That's one reason scientists who study asteroids and are eager to learn more about their numbers, orbits and physical characteristics. --><!-- </p><p> -->Work with Major Tom to help our scientists stop asteroids before they hit us!</p>
  <br>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
      <h3 class="panel-title">Major Tom's Ground Control Panel</h3>

    </div>
  <div class="panel-body clearfix">
    <p class="pull-right"><object width="250" height="40" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="gsSong3522212442" name="gsSong3522212442"><param name="movie" value="http://grooveshark.com/songWidget.swf" /><param name="wmode" value="window" /><param name="allowScriptAccess" value="always" /><param name="flashvars" value="hostname=grooveshark.com&songID=35222124&style=metal&p=0" /><object type="application/x-shockwave-flash" data="http://grooveshark.com/songWidget.swf" width="250" height="40"><param name="wmode" value="window" /><param name="allowScriptAccess" value="always" /><param name="flashvars" value="hostname=grooveshark.com&songID=35222124&style=metal&p=0" /><span><a href="http://grooveshark.com/search/song?q=David%20Bowie%20Space%20Oddity" title="Space Oddity by David Bowie on Grooveshark">Space Oddity by David Bowie on Grooveshark</a></span></object></object></p>
    <p>If an asteroid is headed our way, we want to know that! Ask Major Tom a question and explore the interactive charts below to find out about the risk for possibilities of future impact with Earth.</p>
    <br>
    <br>
            <div class="dropdown">
              <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">
                Start Exploring Asteroids...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="caret"></span>
              </button>
              <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                <li role="presentation"><a role="menuitem" tabindex="-1" href="javascript:danger()">Which are the most dangerous asteroids?</a></li>
                <li role="presentation" class="divider"></li>
                <li role="presentation"><a role="menuitem" tabindex="-1" href="javascript:filter([[2000,3000], null, null, null])">Which are the biggest asteroids?</a></li>
                <li role="presentation" class="divider"></li>
                <li role="presentation"><a role="menuitem" tabindex="-1" href="javascript:filter([null, [0,20], [0.0,0.7], null])">Which asteroids are flying by the earth this month?</a></li>
                <li role="presentation" class="divider"></li>
                <li role="presentation"><a role="menuitem" tabindex="-1" href="javascript:filter([null, null, null, [0.0,5.0]])">Which asteroids are easisest to travel to?</a></li>
              </ul>
            </div>
<br>


<!-- charts START -->
<div id="charts">
  <div id="speed-chart" class="chart">
    <div class="title">Size (Meters)&nbsp;&nbsp;|&nbsp;&nbsp;<div class="label label-info" data-toggle="popover" title="mean_daily_motion (Â°/day)" data-content="In orbital  mechanics, mean motion is measure of how fast a Asteroid progresses around its elliptical orbit.">Info</div><!-- &nbsp;&nbsp;<a class="label label-default">Reset</a> --></div>
  </div>

  <div id="size-chart" class="chart">
    <div class="title">Next Closest Approach to Earth (Lunar&nbsp;Distance)&nbsp;&nbsp;|&nbsp;&nbsp;<div class="label label-info" data-toggle="popover" title="absolute_magnitude" data-content="Closest Approach to Earth">Info</div><!-- &nbsp;&nbsp;<a class="label label-default">Reset</a> --></div>
  </div>

  <div id="perihelion-distance-chart" class="chart">
    <div class="title">Orbital Period&nbsp;&nbsp;|&nbsp;&nbsp;<div class="label label-info" data-toggle="popover" title="perihelion_distance (AU)" data-content="Time to Orbit">Info</div><!-- &nbsp;&nbsp;<a class="label label-default">Reset</a> --></div>
  </div>

  <div id="earth-moid-chart" class="chart">
    <div class="title">Energy to Travel to Asteroid (KM/Sec)&nbsp;&nbsp;|&nbsp;&nbsp;<div class="label label-info" data-toggle="popover" title="earth_moid (AU)" data-content="Earth Minimum orbit intersection distance (MOID) is a measure used in astronomy to assess potential close approaches and collision risks between astronomical objects and Earth.">Info</div><!-- &nbsp;&nbsp;<a class="label label-default">Reset</a> --></div>
  </div>

</div>
<!-- charts END -->


<!-- search results -->
<div class="panel panel-default">

     <div class="panel-heading clearfix"><h4 class="panel-title ae-data-table-title">Asteroids<span class="pull-right ae-table-total">
      <div class="btn-group" role="group"><button type="button" class="btn active ae-table-toggle" data-toggle="tooltip" data-placement="top" title="Table View" onclick="toggleAsteroidView(0);">&nbsp;<i class="fa fa-table fa-lg"></i>&nbsp;</button><button type="button" class="btn inactive ae-table-toggle" data-toggle="tooltip" data-placement="top" title="Chart View" onclick="toggleAsteroidView(1);">&nbsp;<i class="fa fa-area-chart fa-lg"></i>&nbsp;</button></div>&nbsp;&nbsp;|&nbsp;&nbsp;<span id="active">-</span> of <span id="total">-</span> Asteroids Displayed</span></h4></div>

  <div id="table_content" class="panel-body">
    <table class="table table-condensed">

    <thead>

        <tr>

          <th class="header">&nbsp;&nbsp;&nbsp; Designation (i)&nbsp;&nbsp;&nbsp;</th>
          <th class="header">Size (Meters) (i)</th>
          <th class="header">Next Closest Approach to Earth Date (i)</th>
          <th class="header">Next Closest Approach to Earth (Lunar&nbsp;Distance) (i)</th>
          <th class="header">Orbital Period (i)</th>
          <th class="header">Energy to Travel to Asteroid (KM/Sec) (i)</th>
          <th class="header">Impact Probability (i)
          <th class="header">PHA (i)
	    <br/>
                <div href="#" class="torino label label-info" data-placement='above' title="The Torino Impact Hazard Scale">
                  <span class="fa fa-info-circle fa-lg"></span>
                </div>

                  <!-- torino pop up layer HTML -->
                  <div id="torino_content_wrapper" style="display: none">
                      <table class="table small table-bordered" style="align:center; width:200px;">
                              <tr><td>No Hazard (White Zone)</td></tr>
                              <tr class="success"><td>Normal (Green Zone)</td></tr>
                              <tr class="unknown-danger"><td>Danger is Unkown</td></tr>
                              <tr class="warning"><td>Meriting Attention by Astronomers (Yellow Zone)</td></tr>
                              <tr class="med-danger"><td>Threatening (Orange Zone)</td></tr>
                              <tr class="high-danger"><td>Certain Collisions (Red Zone)</td></tr>
                      </table>
                      <a href="http://neo.jpl.nasa.gov/torino_scale.html" target="_blank">More Info...</a>
                  </div>
                  <!-- end tornino pop up layer -->

            </th>

            <th>Share</th>

        </tr>

    </thead>

    <tbody class="list">
<!-- render via javascript -->
    </tbody>

</table>

  </div>
  <!--<div class="panel-footer"> XXX of Asteroids selected. </div>-->
  <!-- <div class="panel-footer"><aside id="totals"><span id="active">-</span> of <span id="total">-</span> asteroids selected.</aside></div>-->
  
  <div id="highchart_content" class="highchart" style="height: 480px; min-width: 720px; max-width: 720px; margin: 0 auto"></div>

</div>




<!-- closing of Ground Control-->
  </div>
 </div>
<!-- closing of Ground Control-->



<!--
<div id="lists">
  <div id="asteroid-list" class="list"></div>
</div>
-->

<footer>
  <span style="float:left;">
    <h6>Created by Team Nova: Kris Robison, Rajagopal Sathyamurthi, Daniel Schwartz, DJ Ursal</h6>
    <p><a href="http://en.wikipedia.org/wiki/Major_Tom" target="_blank">More about Major Tom...</a></p>
    Released under the <a href="http://www.apache.org/licenses/LICENSE-2.0.html">Apache License 2.0</a>.<br>
    Leverage: Bootstrap, Fontawesome, Crossfilter (Square,Inc.)
    <br><br><br><br><br>
</footer>


<script src="http://code.highcharts.com/highcharts.js"></script>
<script src="http://code.highcharts.com/highcharts-more.js"></script>
<script src="http://code.highcharts.com/modules/exporting.js"></script>

<script>
var twitter_share = function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}};

twitter_share(document, 'script', 'twitter-wjs');

d3.json("/asteroids.json", function(error, asteroids_temp) {
  // Various formatters.
  var formatNumber = d3.format(",d"),
      formatChange = d3.format("+,d");

  window.filter = function(filters) {
    filters.forEach(function(d, i) { charts[i].filter(d); });
    impact2.filter(null);
    renderAll();
  };

  window.reset = function(i) {
    charts[i].filter(null);
    impact2.filter(null);
    renderAll();
  };

  window.danger = function() {
    // pha.filter("true");
    impact2.filterRange([0.0001, 1.0]);
    renderAll();
  };

  window.toggleAsteroidView = function(tableOrHighChart) {
    if( tableOrHighChart == 1 ) {
      $('#table_content').hide();  
      $('#highchart_content').show();
    }
    else if( tableOrHighChart == 0 ) {
      $('#table_content').show();  
      $('#highchart_content').hide();
    }

    // toggleFlag = tableOrHighChart;
  }

  var asteroids = [];
  // // A little coercion, since the CSV is untyped.
  asteroids_temp.forEach(function(d, i) {
    d.index = i;
    if(d.close_app_dist != null) {
      asteroids.push(d)
    }
  });

  //RXIE
  console.log("total count of asteroids: " + asteroids.length)

/***
// FIELD CHANGES
absolute_magnitude      :       21.4
aphelion_distance       :       2.738
designation     :       2013 GF
delta_v :       6.38464
earth_moid      :       0.05096
id      :       5819910
km_neo  :       false
mean_daily_motion       :       0.3805738
n_or_d  :       K13G00F
name    :       null
neo     :       true
number  :       null
perihelion_distance     :       1.033777023
period  :       2.59
pha     :       true
torino  :       null

==============
New JSON fields:

designation     :       2009 UK
close_app_date  :       2023 12 12
close_app_dist  :       83
impact_prob     :       0
taxonomy_class  :
pha     :       false
size    :       372
spin_period     :
delta_v :       5.8
period  :       2.78
url     :       http://minorplanetcenter.net/db_search/show_object?object_id=2009 UK
***/





  // Create the crossfilter for the relevant dimensions and groups.
  var asteroid = crossfilter(asteroids),
      all = asteroid.groupAll(),

      size = asteroid.dimension(function(d) { return Math.max(0, Math.min(2000, +d.size)); }),
      sizes = size.group(function(d) { return Math.floor(d/100) * 100.0; }),

      earth_distance = asteroid.dimension(function(d) { return Math.max(0, +d.close_app_dist); }),
      earth_distances = earth_distance.group(function(d) { return Math.floor(d / 25)  * 25.0; }),

      period = asteroid.dimension(function(d) { return Math.min(100, +d.period); }),
      periods = period.group(function(d) { return Math.floor(d * 4) / 4.0; }),

      energy = asteroid.dimension(function(d) { return Math.min(1000, +d.delta_v); }),
      energys = energy.group(function(d) { return Math.floor(d) / 100 * 100.0; }),

      // demision for filtering of "danger"...
      pha = asteroid.dimension(function(d) { return d.pha}),
      impact = asteroid.dimension(function(d) { return d.impact_prob}),
      impact2 = asteroid.dimension(function(d) { return d.impact_prob_float}),

      designation = asteroid.dimension(function(d) { return d.designation});


  var charts = [
    barChart()
        .dimension(size)
        .group(sizes)
      .x(d3.scale.linear()
        .domain([1, 2000])
        .rangeRound([0, 10 * 20])),

    barChart()
        .dimension(earth_distance)
        .group(earth_distances)
      .x(d3.scale.linear()
        .domain([0, 500])
        .rangeRound([0, 10 * 20])),

    barChart()
        .dimension(period)
        .group(periods)
      .x(d3.scale.linear()
        .domain([0, 5.0])
        .rangeRound([0, 10 * 20])),

    barChart()
        .dimension(energy)
        .group(energys)
      .x(d3.scale.linear()
        .domain([0, 20])
        .rangeRound([0, 10 * 20])),


    // barChart()
    //     .dimension(date)
    //     .group(dates)
    //     .round(d3.time.day.round)
    //   .x(d3.time.scale()
    //     .domain([new Date(2001, 0, 1), new Date(2001, 3, 1)])
    //     .rangeRound([0, 10 * 90]))
    //     .filter([new Date(2001, 1, 1), new Date(2001, 2, 1)])

  ];

  // Given our array of charts, which we assume are in the same order as the
  // .chart elements in the DOM, bind the charts to the DOM and render them.
  // We also listen to the chart's brush events to update the display.
  var chart = d3.selectAll(".chart")
      .data(charts)
      .each(function(chart) { chart.on("brush", renderAll).on("brushend", renderAll); });

  // Render the initial lists.
  var list = d3.selectAll(".list")
      .data([asteroidList]);

  // RXIE Render the initial high charts
  var highChart = d3.selectAll(".highchart")
      .data([asteroidHighchart]);

  // Render the total.
  d3.selectAll("#total")
      .text(formatNumber(asteroid.size()));

  // WIP: apply filter
  console.log("apply filter: <%= @filter_type %>"); 

  <% if @filter_type=="hazard" %>
    pha.filter("true");
    window.filter([[1900,3000],null,null,null]);
    console.log("filter is hazard"); 
  <% elsif @filter_type=="size"  %>
    window.filter([[2000,3000],null,null,null]);
  <% elsif @filter_type=="near"  %>
    window.filter([null,[0,20], [0.0,0.7], null]);
  <% elsif @filter_type=="easy"  %>
    window.filter([null, null, null, [0.0,5.0]]);
  <% end %> 
  
  // start with showing table list, hiding highchart
  // var toggleFlag = 0;
  toggleAsteroidView(0);

  renderAll();

  // Renders the specified chart or list.
  function render(method) {
    d3.select(this).call(method);
  }

  // Whenever the brush moves, re-rendering everything.
  function renderAll() {
    chart.each(render);
    list.each(render);
    highChart.each(render);

    d3.select("#active").text(formatNumber(all.value()));
  }

  function asteroidList(div) {
    // var asteroidsByDate = nestByDate.entries(date.top(40));

    // div.each(function() {
    //   var date = d3.select(this).selectAll(".date")
    //       .data(asteroidsByDate, function(d) { return d.key; });

    //   date.enter().append("div")
    //       .attr("class", "date")Æ
    //     .append("div")
    //       .attr("class", "day")
    //       .text(function(d) { return formatDate(d.values[0].date); });

    //   date.exit().remove();

    div.each(function() {
      var asteroid = d3.select(this).selectAll(".asteroid")
          .data(designation.top(20), function(d) { 
              return d.index; 
          });

      var asteroidEnter = asteroid.enter().append("tr")
                                  .attr("class", function(d) {

                                    if (d.impact_prob_float == null) {
                                      return "asteroid unknown-danger";
                                    } else if (+d.impact_prob_float <= 0.0) {
                                      return "asteroid";
                                    } else if (+d.impact_prob_float > 0.0 && +d.impact_prob_float <= 0.00001 ) {
                                      return "asteroid success";
                                    } else if (+d.impact_prob_float > 0.00001 && +d.impact_prob_float <= 0.0001 ) {
                                      return "asteroid warning";
                                    } else if (+d.impact_prob_float > 0.0001 && +d.impact_prob_float <= 0.001 ) {
                                      return "asteroid med-danger";
                                    } else if (+d.impact_prob_float > 0.001 ) {
                                      return "asteroid high-danger"
                                    }

                                  });

      // asteroidEnter.append("td")
      //     .text(function(d) { return d.name; });

      asteroidEnter.append("td")
          .append("a")
          .attr("href", function(d) { return "/asteroids/" + d.designation; })
          .text(function(d) { return d.designation; });

      asteroidEnter.append("td")
          .text(function(d) { return d.size });

      asteroidEnter.append("td")
          .text(function(d) { return d.close_app_date; });

      asteroidEnter.append("td")
          .text(function(d) { return d.close_app_dist; });

      asteroidEnter.append("td")
          .text(function(d) { return d.period; });

      asteroidEnter.append("td")
          .text(function(d) { return d.delta_v; });

      asteroidEnter.append("td")
          .text(function(d) { return d.impact_prob; });

      asteroidEnter.append("td")
          .text(function(d) { return d.pha; });


// <a href="https://twitter.com/share" class="twitter-share-button"
// data-url="https://asteriod-explorers.herokuapp.com/adetail.html"
// data-text="Check out this Asteriod!"
// data-via=user_id
// data-related="asteriodexplore"
// data-count="none"
// data-hashtags="asteriodexplore, asteroids, nasa, seti">Tweet</a>

      asteroidEnter.append("td")
      .append("a")
      .attr("href","http://twitter.com/home/?status=Check out Asteriod 2014 GC49! http://asteroid-explorers.herokuapp.com/adetail.html %23asteriodexplore %23asteroids %23nasa %23seti")
      .attr("target", "_blank")
      .attr("class", "btn btn-default btn-sm")
      .html("<span class='fa fa-twitter'></span> Tweet");

      asteroid.exit().remove();

      asteroid.order();

    });

    // alert("series size: " +  sizeSeries.length);
    // asteroidHighchart(sizeSeries);
  }


function asteroidHighchart(div) {

  var distanceSeries = [];
  var periodSeries = [];
  var sizeSeries = [];
  var energySeries = [];
  var impactSeries = [];
  
  $(function(){
      var asteroid = d3.select(this).selectAll(".asteroid")
          .data(designation.top(20), function(d) { 

            var dateStr = d.close_app_date.split(' ');
            var date = Date.UTC(dateStr[0],dateStr[1],dateStr[2]);
            var size = d.size;

            var tmpDist = [];
            tmpDist.push(date);
            tmpDist.push(Math.round(d.close_app_dist));
            tmpDist.push(size); 
            distanceSeries.push(tmpDist);

            var tmpPeriod = [];
            // tmpPeriod.push(Math.round(d.close_app_dist));
            tmpPeriod.push(date);
            tmpPeriod.push(Math.round(d.period));
            tmpPeriod.push(size); 
            periodSeries.push(tmpPeriod);

            var tmpEnergy = [];
            tmpEnergy.push(date);
            tmpEnergy.push(Math.round(d.delta_v));
            tmpEnergy.push(size); 
            energySeries.push(tmpEnergy);

            var tmpImpact = [];
            tmpImpact.push(date);
            var probLog = 0;
            if( d.impact_prob_float > 0 ) {
              probLog = Math.log10(d.impact_prob_float);
            }
            tmpImpact.push(probLog);
            tmpImpact.push(size); 
            impactSeries.push(tmpImpact);

            return d.index; 
          });
  });

//  alert("the size:  " + sizeSeries.length);

      $('#highchart_content').highcharts({
        chart: {
            type: 'bubble',
            zoomType: 'xy'
        },

        title: {
            text: 'Asteroid Charts'
        },

        xAxis: {
          type:"datetime",
          dateTimeLabelFormats:{
            month: '%m/%y'
          }
        },

        series: [
        {
            name: "Distance",
            data: distanceSeries
            // fillColor: 'red'
        },
        {
            name: "Orbital Period",
            data: periodSeries
        },
        {
            name: "Energy",
            data: energySeries
        },
        {
            name: "Impact Prob",
            data: impactSeries
        },
        // {
        //     name: 'Speed',
        //     data: [[Date.UTC(2034,2,5),8,4324],[Date.UTC(2031,06,03),12,46], [Date.UTC(2020,0,0),32,2347]]
        // },
        {
            name: 'RefSize',
            data: [[Date.UTC(2034,6,3),0,500],[Date.UTC(2034,03,09),0,50], [Date.UTC(2034,05,18),0,5000]]
            // data: [[97, 36, 79], [94, 74, 60], [68, 76, 58], [64, 87, 56], [68, 27, 73], [74, 99, 42], [7, 93, 87], [51, 69, 40], [38, 23, 33], [57, 86, 31]]
        }
        // {
        //     name: 'Period',
        //     data: [[25, 10, 87], [2, 75, 59], [11, 54, 8], [86, 55, 93], [5, 3, 58], [90, 63, 44], [91, 33, 17], [97, 3, 56], [15, 67, 48], [54, 25, 81]]
        // }, 
        // {
        //     name: 'Delta-v',
        //     data: [[47, 47, 21], [20, 12, 4], [6, 76, 91], [38, 30, 60], [57, 98, 64], [61, 17, 80], [83, 60, 13], [67, 78, 75], [64, 12, 10], [30, 77, 82]]
        // }
        ]

      });
    }




  function barChart() {
    if (!barChart.id) barChart.id = 0;

    var margin = {top: 10, right: 10, bottom: 20, left: 10},
        x,
        y = d3.scale.linear().range([100, 0]),
        id = barChart.id++,
        axis = d3.svg.axis().orient("bottom"),
        brush = d3.svg.brush(),
        brushDirty,
        dimension,
        group,
        round;

    function chart(div) {
      var width = x.range()[1],
          height = y.range()[0];

      y.domain([0, group.top(1)[0].value]);

      div.each(function() {
        var div = d3.select(this),
            g = div.select("g");

        // Create the skeletal chart.
        if (g.empty()) {

          div.select(".title").append("a")
              .attr("href", "javascript:reset(" + id + ")")
              .attr("class", "label label-default reset")
              .text("reset")
              .style("display", "none");

          g = div.append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
            .append("g")
              .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

          g.append("clipPath")
              .attr("id", "clip-" + id)
            .append("rect")
              .attr("width", width)
              .attr("height", height);

          g.selectAll(".bar")
              .data(["background", "foreground"])
            .enter().append("path")
              .attr("class", function(d) { return d + " bar"; })
              .datum(group.all());

          g.selectAll(".foreground.bar")
              .attr("clip-path", "url(#clip-" + id + ")");

          g.append("g")
              .attr("class", "axis")
              .attr("transform", "translate(0," + height + ")")
              .call(axis);

          // Initialize the brush component with pretty resize handles.
          var gBrush = g.append("g").attr("class", "brush").call(brush);
          gBrush.selectAll("rect").attr("height", height);
          gBrush.selectAll(".resize").append("path").attr("d", resizePath);
        }

        // Only redraw the brush if set externally.
        if (brushDirty) {
          brushDirty = false;
          g.selectAll(".brush").call(brush);
          div.select(".title a").style("display", brush.empty() ? "none" : null);
          if (brush.empty()) {
            g.selectAll("#clip-" + id + " rect")
                .attr("x", 0)
                .attr("width", width);
          } else {
            var extent = brush.extent();
            g.selectAll("#clip-" + id + " rect")
                .attr("x", x(extent[0]))
                .attr("width", x(extent[1]) - x(extent[0]));
          }
        }

        g.selectAll(".bar").attr("d", barPath);
      });

      function barPath(groups) {
        var path = [],
            i = -1,
            n = groups.length,
            d;
        while (++i < n) {
          d = groups[i];
          path.push("M", x(d.key), ",", height, "V", y(d.value), "h9V", height);
        }
        return path.join("");
      }

      function resizePath(d) {
        var e = +(d == "e"),
            x = e ? 1 : -1,
            y = height / 3;
        return "M" + (.5 * x) + "," + y
            + "A6,6 0 0 " + e + " " + (6.5 * x) + "," + (y + 6)
            + "V" + (2 * y - 6)
            + "A6,6 0 0 " + e + " " + (.5 * x) + "," + (2 * y)
            + "Z"
            + "M" + (2.5 * x) + "," + (y + 8)
            + "V" + (2 * y - 8)
            + "M" + (4.5 * x) + "," + (y + 8)
            + "V" + (2 * y - 8);
      }
    }

    brush.on("brushstart.chart", function() {
      var div = d3.select(this.parentNode.parentNode.parentNode);
      div.select(".title a").style("display", null);
    });

    brush.on("brush.chart", function() {
      var g = d3.select(this.parentNode),
          extent = brush.extent();
      if (round) g.select(".brush")
          .call(brush.extent(extent = extent.map(round)))
        .selectAll(".resize")
          .style("display", null);
      g.select("#clip-" + id + " rect")
          .attr("x", x(extent[0]))
          .attr("width", x(extent[1]) - x(extent[0]));
      dimension.filterRange(extent);
    });

    brush.on("brushend.chart", function() {
      if (brush.empty()) {
        var div = d3.select(this.parentNode.parentNode.parentNode);
        div.select(".title a").style("display", "none");
        div.select("#clip-" + id + " rect").attr("x", null).attr("width", "100%");
        dimension.filterAll();
      }
    });

    chart.margin = function(_) {
      if (!arguments.length) return margin;
      margin = _;
      return chart;
    };

    chart.x = function(_) {
      if (!arguments.length) return x;
      x = _;
      axis.scale(x);
      brush.x(x);
      return chart;
    };

    chart.y = function(_) {
      if (!arguments.length) return y;
      y = _;
      return chart;
    };

    chart.dimension = function(_) {
      if (!arguments.length) return dimension;
      dimension = _;
      return chart;
    };

    chart.filter = function(_) {
      if (_) {
        brush.extent(_);
        dimension.filterRange(_);
      } else {
        brush.clear();
        dimension.filterAll();
      }
      brushDirty = true;
      return chart;
    };

    chart.group = function(_) {
      if (!arguments.length) return group;
      group = _;
      return chart;
    };

    chart.round = function(_) {
      if (!arguments.length) return round;
      round = _;
      return chart;
    };

    return d3.rebind(chart, brush, "on");
  }
});

</script>


</body>
</html>
